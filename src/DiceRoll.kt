import java.util.*
import kotlin.properties.Delegates

class DiceRoll {
    var diceSides by Delegates.notNull<Int>()
    var randomValue by Delegates.notNull<Int>()

    companion object {
        fun roll(diceSides: Int): Int {
            val roll = Random()
            return roll.nextInt(1, (diceSides + 1))
        }

        fun rollForStats(): ArrayList<Int> {
            print("Each of the 6 scores are generated by rolling 4 D6, dropping the lowest roll, and adding them together.\n")
            val randomValues: ArrayList<Int> = ArrayList()
            val processedValues: ArrayList<Int> = ArrayList()
            val processingValues = IntArray(6)
            val roll = Random()
            for (index in processingValues) {
                for (i in 0..3) {
                    val d6 = roll.nextInt(1, 7)
                    randomValues.add(d6)
                    println(d6)
                }
                println("")
                randomValues.sort()
                val result = randomValues[1] + randomValues[2] + randomValues[3]
                processedValues.add(result)
                println("Result: $result \n")
            }
            processedValues.sort()
            processedValues.reverse()
            return processedValues
        }
    }
}